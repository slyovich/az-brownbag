name: Landing_Zone_Workflow

on:
  workflow_dispatch:

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  keyFile: "landing-zone.terraform.tfstate"

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: demo
    defaults:
      run:
        working-directory: ./IaC/landing-zone

    steps:
    - uses: actions/checkout@v3.0.2
    
    - name: Install Terraform
      uses: hashicorp/setup-terraform@v2.0.0

    - name: "Login via Azure CLI"
      uses: azure/login@v1.4.5
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Terraform init
      run: |
        terraform init \
          -backend-config="resource_group_name=${{ vars.TFSTATE_RESOURCE_GROUP_NAME }}" \
          -backend-config="storage_account_name=${{ vars.TFSTATE_STORAGE_ACCOUNT_NAME }}" \
          -backend-config="container_name=${{ vars.TFSTATE_CONTAINER_NAME }}" \
          -backend-config="key=${{ env.keyFile }}"

    - name: Terraform plan
      run: terraform plan -out=tfplan.out
      env:
        TF_VAR_location: ${{ vars.TF_VAR_location }}
        TF_VAR_resourceGroupName: ${{ vars.TF_VAR_LandingZone_ResourceGroupName }}
        TF_VAR_vnet: ${{ vars.TF_VAR_vnet }}
        TF_VAR_nsg: ${{ vars.TF_VAR_nsg }}
        TF_VAR_subnets: ${{ vars.TF_VAR_subnets }}
        TF_VAR_dns: ${{ vars.TF_VAR_dns }}
        TF_VAR_workspaceName: ${{ vars.TF_VAR_workspaceName }}
        TF_VAR_appInsightName: ${{ vars.TF_VAR_appInsightName }}
        TF_VAR_keyVault: ${{ vars.TF_VAR_keyVault }}
        TF_VAR_containerAppEnvironment: ${{ vars.TF_VAR_containerAppEnvironment }}
        TF_VAR_frontDoor: ${{ vars.TF_VAR_frontDoor }}

    - name: Terraform apply
      run: terraform apply tfplan.out