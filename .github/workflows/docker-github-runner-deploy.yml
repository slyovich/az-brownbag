name: Docker_Runner_Deploy_Workflow

on:
  workflow_dispatch:

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  keyFile: "landing-zone.terraform.tfstate"

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: demo
    defaults:
      run:
        working-directory: ./IaC/docker-github-runner

    steps:
    - uses: actions/checkout@v3.0.2
    
    - name: Install Terraform
      uses: hashicorp/setup-terraform@v2.0.0

    # - name: "Login via Azure CLI"
    #   uses: azure/login@v1.4.5
    #   with:
    #     creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: test
      run: echo "${containerAppEnvironment.name}"
      env:
        containerAppEnvironment: ${{ fromJSON(vars.TF_VAR_containerAppEnvironment) }}

    # - name: Terraform init
    #   run: |
    #     terraform init \
    #       -backend-config="resource_group_name=${{ vars.TFSTATE_RESOURCE_GROUP_NAME }}" \
    #       -backend-config="storage_account_name=${{ vars.TFSTATE_STORAGE_ACCOUNT_NAME }}" \
    #       -backend-config="container_name=${{ vars.TFSTATE_CONTAINER_NAME }}" \
    #       -backend-config="key=${{ env.keyFile }}"
    
    # - name: Terraform plan
    #   run: terraform plan -out=tfplan.out
    #   env:
    #     TF_VAR_location: ${{ vars.TF_VAR_location }}
    #     TF_VAR_resourceGroupName: ${{ vars.TF_VAR_resourceGroupName }}
    #     TF_VAR_containerAppEnvironmentName: ${{ vars.TF_VAR_containerAppEnvironment.name }}

    # - name: Terraform apply
    #   run: terraform apply tfplan.out

